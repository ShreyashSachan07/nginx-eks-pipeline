
//main till line 80 

// pipeline {
//     agent any 
//     tools {
//         nodejs 'nodejs'
//     }
//     environment  {
//         AWS_ACCOUNT_ID = credentials('ACCOUNT_ID')
//         AWS_CREDS = credentials('aws-creds')
//         AWS_ECR_REPO_NAME = credentials('ECR_REPO1')
//         SYSDIG_API_TOKEN = credentials('sysdig-token')
//         AWS_DEFAULT_REGION = 'us-east-1'
//         REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/"
//         SYSDIG_SECURE_URL = 'https://app.sysdigcloud.com'

//     }
//     stages {
//         stage('Cleaning Workspace') {
//             steps {
//                 cleanWs()
//             }
//         }
//         stage('Checkout from Git') {
//             steps {
//                 git branch: 'main', credentialsId: 'GITHUB', url: 'https://github.com/ShreyashSachan07/nginx-eks-pipeline.git'
//             }
//         }
        
//         stage("Docker Image Build") {
//             steps {
//                 script {
//                     dir('nginx-eks-pipeline') {
//                             //sh 'docker system prune -f'
//                             //sh 'docker container prune -f'
//                             sh 'docker build -t ${AWS_ECR_REPO_NAME} .'
//                     }
//                 }
//             }
//         }
//
//        stage('Sysdig Pipeline Scan') {
//            steps {
//                sh 'sysdig-cli-scanner --apiurl $SYSDIG_SECURE_URL $AWS_ECR_REPO_NAME'
//            }
//         }
//main
//         stage('Sysdig Pipeline Scan') {
//             steps {
//                 script {
//                     dir('nginx-eks-pipeline') {
//                         sh """
//                         docker run --rm \
//                             -e SYSDIG_SECURE_API_TOKEN=${SYSDIG_API_TOKEN} \
//                             sysdiglabs/sysdig-cli-scanner:latest \
//                             docker://${AWS_ECR_REPO_NAME}
//                         """
//             }
//         }
//     }
// }
      

    //     stage("ECR Image Pushing") {
    //         steps {
    //             script {
    //                     sh 'aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REPOSITORY_URI}'
    //                     echo "docker tag ${AWS_ECR_REPO_NAME}${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}"
    //                     sh 'docker tag ${AWS_ECR_REPO_NAME} ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}'
    //                     sh 'docker push ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}'
    //             }
    //         }
    //     }

    //     stage('Sysdig Registry Scan (ECR)') {
    //         steps {
    //             sh 'sysdig-cli-scanner --apiurl $SYSDIG_SECURE_URL $ECR_REGISTRY/$IMAGE_NAME:latest'
    //         }
    //     }
    // }}

/////////////////////////////////////////////////////////////////////////////////////////////////////////
pipeline {
    agent any 
    tools {
        nodejs 'nodejs'
    }

    parameters { 
        string(name: 'DOCKER_REPOSITORY', defaultValue: 'sysdigcicd/cronagent', description: 'Name of the image to be built (e.g.: sysdiglabs/dummy-vuln-app)') 
        string(name: 'GIT_REPOSITORY', defaultValue: 'https://github.com/sysdiglabs/secure-inline-scan-examples.git', description: 'Name of the repository with the Dockerfile to be built (e.g.: https://github.com/sysdiglabs/secure-inline-scan-examples.git)') 
        string(name: 'SYSDIG_ENDPOINT', defaultValue: 'https://eu1.app.sysdig.com', description: 'The appropriate Sysdig vulnerability scanning endpoint depending on your region, see https://docs.sysdig.com/en/docs/administration/saas-regions-and-ip-ranges')
    }
    environment {
        AWS_ACCOUNT_ID = credentials('ACCOUNT_ID')
        AWS_CREDS = credentials('aws-creds')
        AWS_ECR_REPO_NAME = credentials('ECR_REPO1')
        AWS_DEFAULT_REGION = 'us-east-1'
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
        SYSDIG_SECURE_CREDENTIALS_ID = 'sysdig-secure-api-credentials'
        SYSDIG_SECURE_URL = ''
        //SYSDIG_SECURE_API_TOKEN = credentials('sysdig-secure-api-token')
        SECURE_API_TOKEN = credentials('sysdig-secure-api-token')
        SYSDIG_ENDPOINT = 'https://app.us4.sysdig.com' // <-- Add this (or wherever your Sysdig scanner is)
        DOCKER_REPOSITORY = "${AWS_ECR_REPO_NAME}" // <-- Add this
        //SYSDIG_SECURE_TOKEN='f7a2b53d-1a31-460d-a1f0-2d14f403ff7c'

    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout from Git') {
            steps {
                git branch: 'main', credentialsId: 'GITHUB', url: 'https://github.com/ShreyashSachan07/nginx-eks-pipeline.git'
            }
        }
        
        stage('Docker Image Build') {
            steps {
                script {
                    dir('nginx-eks-pipeline') {
                        sh 'docker build -t ${AWS_ECR_REPO_NAME} .'
                    }
                }
            }
        }



//         stage('Scan image') {
//             steps {
//                 withCredentials([string(credentialsId: 'sysdig-secure-api-token', variable: 'SECURE_API_TOKEN')]) {
//                     sh '''
//                     VERSION=$(curl -L -s https://download.sysdig.com/scanning/sysdig-cli-scanner/latest_version.txt)
//                     curl -LO "https://download.sysdig.com/scanning/bin/sysdig-cli-scanner/${VERSION}/linux/amd64/sysdig-cli-scanner"
//                     chmod +x ./sysdig-cli-scanner
//                     export SYSDIG_SECURE_TOKEN=${SECURE_API_TOKEN}
//                     SECURE_API_TOKEN="355724e1-2500-4666-bee2-5c323bddb2a1" ./sysdig-cli-scanner --apiurl ${SYSDIG_ENDPOINT}  docker://${DOCKER_REPOSITORY} 
//                     '''
//         }
//     }
// }


        stage('ECR Image Pushing') {
            steps {
                script {
                    sh 'aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REPOSITORY_URI}'
                    sh 'docker tag ${AWS_ECR_REPO_NAME} ${REPOSITORY_URI}/${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}'
                    sh 'docker push ${REPOSITORY_URI}/${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}'
                }
            }
        }
        stage('Checkout Code') {
            steps {
                git branch: 'main', credentialsId: 'GITHUB', url: 'https://github.com/ShreyashSachan07/nginx-eks-pipeline.git'
            }
        }
        stage('Update deployment image to github') {
            environment {
                GIT_REPO_NAME = "nginx-eks-pipeline"
                GIT_USER_NAME = "ShreyashSachan07"
            }
            steps {
                dir('nginx-eks-pipeline/k8s') {
                    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config user.email 'devopstest@gmail.com'
                            git config user.name 'ShreyashSachan07'
                            git status
                            BUILD_NUMBER=${BUILD_NUMBER}
                            echo $BUILD_NUMBER
                            imageTag=$(grep 'version:' nginx-deployment.yaml | awk '{print $2}')
                            echo "Current nginx image version: $imageTag"
                            sed -i "s|repo: .*|repo: ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}|" nginx-deployment.yaml
                            echo "repo-name: $ECR_REPO_NAME"
                            sed -i "s|version: .*|version: ${BUILD_NUMBER}|" nginx-deployment.yaml
                            git add nginx-deployment.yaml
                            git commit -m "Update Helm chart web microservice image to ${BUILD_NUMBER} and repository to ${ECR_REPO_NAME}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:develop
                        '''
                    }
                }
            }
        }
    }

        // stage('Sysdig ECR Registry Scan') {
        //     steps {
        //         script {
        //             sysdigSecureRegistryImageScan(
        //                 sysdigSecureCredentialsId: "${SYSDIG_SECURE_CREDENTIALS_ID}", // Corrected
        //                 imageId: "${REPOSITORY_URI}/${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}", // Corrected parameter name
        //                 engineUrl: "${SYSDIG_SECURE_URL}", // Added engineUrl
        //                 bailOnPluginFail: true
        //             )
        //         }
        //     }
        // }

        // stage('Deploy to EKS') {
        //     steps {
        //         script {
        //             sh  '''
        //                 aws eks update-kubeconfig --region ${AWS_DEFAULT_REGION} --name <YOUR_CLUSTER_NAME>
        //                 kubectl apply -f nginx-eks-pipeline/k8s/deployment.yaml
        //                 '''
        //                  }
        //         }
        //     }   

    }
}