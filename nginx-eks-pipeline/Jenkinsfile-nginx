pipeline {
    agent any 
    tools {
        nodejs 'nodejs'
    }
    environment  {
        AWS_ACCOUNT_ID = credentials('ACCOUNT_ID')
        AWS_ECR_REPO_NAME = credentials('ECR_REPO1')
        SYSDIG_API_TOKEN = credentials('sysdig-token')
        AWS_DEFAULT_REGION = 'us-east-1'
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/"
        SYSDIG_SECURE_URL = 'https://app.sysdigcloud.com'
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'main', credentialsId: 'GITHUB', url: 'https://github.com/ShreyashSachan07/nginx-eks-pipeline.git'
            }
        }
        
        stage("Docker Image Build") {
            steps {
                script {
                    dir('nginx-eks-pipeline') {
                            //sh 'docker system prune -f'
                            //sh 'docker container prune -f'
                            sh 'docker build -t ${AWS_ECR_REPO_NAME} .'
                    }
                }
            }
        }

        // stage('Sysdig Pipeline Scan') {
        //     steps {
        //         sh 'sysdig-cli-scanner --apiurl $SYSDIG_SECURE_URL $AWS_ECR_REPO_NAME'
        //     }
        // }
//main
//         stage('Sysdig Pipeline Scan') {
//             steps {
//                 script {
//                     dir('nginx-eks-pipeline') {
//                         sh """
//                         docker run --rm \
//                             -e SYSDIG_SECURE_API_TOKEN=${SYSDIG_API_TOKEN} \
//                             sysdiglabs/sysdig-cli-scanner:latest \
//                             docker://${AWS_ECR_REPO_NAME}
//                         """
//             }
//         }
//     }
// }
      

        stage("ECR Image Pushing") {
            steps {
                script {
                        sh 'aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REPOSITORY_URI}'
                        echo "docker tag ${AWS_ECR_REPO_NAME}${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}"
                        sh 'docker tag ${AWS_ECR_REPO_NAME} ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}'
                        sh 'docker push ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}'
                }
            }
        }

        stage('Sysdig Registry Scan (ECR)') {
            steps {
                sh 'sysdig-cli-scanner --apiurl $SYSDIG_SECURE_URL $ECR_REGISTRY/$IMAGE_NAME:latest'
            }
        }

    }}
